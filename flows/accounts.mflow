<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<mule-configuration xmlns="http://www.mulesoft.com/tooling/messageflow" name="accounts">
    <global-element name="Property Placeholder" type="http://www.springframework.org/schema/context/property-placeholder" entity-id="Property Placeholder#1">
        <properties>
            <property name="properties-ref"/>
            <property name="order"/>
            <property name="location" value="application.properties"/>
            <property name="local-override"/>
            <property name="system-properties-mode"/>
            <property name="file-encoding"/>
            <property name="auxiliary;index" value="1"/>
            <property name="ignore-unresolvable"/>
            <property name="ignore-resource-not-found"/>
        </properties>
    </global-element>
    <global-element name="Global Property" type="http://www.mulesoft.org/schema/mule/core/global-property" entity-id="Global Property#1">
        <properties>
            <property name="name" value="sfdc.account.fields"/>
            <property name="value" value="Website, Phone, Name, Id, Fax, CustomerPriority__c, BillingStreet, BillingState, BillingPostalCode, BillingCountry, BillingCity, AnnualRevenue, Active__c, AccountNumber"/>
            <property name="auxiliary;index" value="2"/>
        </properties>
    </global-element>
    <global-unknown description="false" unknownName="rest-router-config" index="3" entity-id="global-unknown#1">
        <content>&lt;rest-router:config xmlns:rest-router=&quot;http://www.mulesoft.org/schema/mule/rest-router&quot; name=&quot;rest-router-config&quot;/&gt;</content>
    </global-unknown>
    <flow SubFlow="false" name="sfdc-accounts" entity-id="945786c5-5a0a-4ffd-8f90-7197936137de">
        <properties>
            <property name="processingStrategy"/>
            <property name="processingStrategy2"/>
            <property name="bussinessEventsLabel"/>
            <property name="tracking:enable-default-events"/>
            <property name="auxiliary;index" value="4"/>
        </properties>
        <lane hadOnlyOneElement="false" index="0" isChoiceOtherwiseLane="false" entity-id="compartment-lane#1">
            <graphicalData x="0" y="0" width="0" height="0"/>
            <endpoint direction="Inbound" message-exchange-pattern="RequestResponse" name="HTTP" type="http://www.mulesoft.org/schema/mule/http/endpoint" entity-id="HTTP#1">
                <graphicalData x="0" y="0" width="0" height="0"/>
                <properties>
                    <property name="port" value="8081"/>
                    <property name="host" value="localhost"/>
                    <property name="businessEventsLabel"/>
                    <property name="followRedirects"/>
                    <property name="org.mule.tooling.ui.modules.core.widgets.meta.ModeAttribute" value="http://www.mulesoft.org/schema/mule/http/endpoint"/>
                    <property name="keep-alive"/>
                    <property name="contentType"/>
                    <property name="disableTransportTransformer"/>
                    <property name="password"/>
                    <property name="exchange-pattern" value="request-response"/>
                    <property name="tracking:enable-default-events"/>
                    <property name="ref"/>
                    <property name="transformer-refs"/>
                    <property name="httpLabel"/>
                    <property name="address"/>
                    <property name="path" value="accounts"/>
                    <property name="encoding"/>
                    <property name="responseTransformer-refs"/>
                    <property name="method"/>
                    <property name="user"/>
                    <property name="responseTimeout"/>
                    <property name="mimeType"/>
                    <property name="auxiliary;index" value="5"/>
                    <property name="connector-ref" value="connector.http.mule.default"/>
                </properties>
            </endpoint>
            <unknown description="false" index="6" entity-id="unknown#1">
                <graphicalData x="0" y="0" width="0" height="0"/>
                <content>&lt;rest-router:router xmlns:rest-router=&quot;http://www.mulesoft.org/schema/mule/rest-router&quot; xmlns:doc=&quot;http://www.mulesoft.org/schema/mule/documentation&quot; templateUri=&quot;/accounts/&quot; config-ref=&quot;rest-router-config&quot; doc:name=&quot;Mule Rest Router&quot;&gt;
			&lt;rest-router:get&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.get.request.in&quot;/&gt;
				&lt;sfdc:query-all xmlns:sfdc=&quot;http://www.mulesoft.org/schema/mule/sfdc&quot; config-ref=&quot;Salesforce_OAuth&quot; query=&quot;Select ${sfdc.account.fields} From Account&quot; doc:name=&quot;Salesforce&quot; accessTokenId=&quot;#[header:INBOUND:Authorization]&quot;/&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.sfdc.out&quot;/&gt;
				&lt;collection-splitter xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; doc:name=&quot;Collection Splitter&quot;/&gt;
				&lt;scripting:transformer xmlns:scripting=&quot;http://www.mulesoft.org/schema/mule/scripting&quot; returnClass=&quot;amg.mkaminsk.sfdc.model.Account&quot; mimeType=&quot;application/json&quot; doc:name=&quot;Groovy&quot;&gt;
					&lt;scripting:script engine=&quot;Groovy&quot; file=&quot;mappings/groovy/sfdc-account-to-account.groovy&quot;/&gt;
				&lt;/scripting:transformer&gt;
				&lt;collection-aggregator xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; failOnTimeout=&quot;true&quot; doc:name=&quot;Collection Aggregator&quot;/&gt;
				&lt;json:object-to-json-transformer xmlns:json=&quot;http://www.mulesoft.org/schema/mule/json&quot; doc:name=&quot;Object to JSON&quot;/&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.get.request.out&quot;/&gt;
			&lt;/rest-router:get&gt;
			&lt;rest-router:post&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.post.request.in&quot;/&gt;
				&lt;json:json-to-object-transformer xmlns:json=&quot;http://www.mulesoft.org/schema/mule/json&quot; returnClass=&quot;amg.mkaminsk.sfdc.model.Account&quot; doc:name=&quot;JSON to Object&quot;/&gt;
				&lt;scripting:component xmlns:scripting=&quot;http://www.mulesoft.org/schema/mule/scripting&quot; doc:name=&quot;Groovy&quot;&gt;
					&lt;scripting:script engine=&quot;Groovy&quot; file=&quot;mappings/groovy/account-to-sfdc-account.groovy&quot;/&gt;
				&lt;/scripting:component&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.post.sfdc.in&quot;/&gt;
				&lt;sfdc:create-single xmlns:sfdc=&quot;http://www.mulesoft.org/schema/mule/sfdc&quot; config-ref=&quot;Salesforce_OAuth&quot; doc:name=&quot;Salesforce&quot; accessTokenId=&quot;#[header:INBOUND:Authorization]&quot; type=&quot;Account&quot;&gt;
					&lt;sfdc:object ref=&quot;#[payload]&quot;/&gt;
				&lt;/sfdc:create-single&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.post.sfdc.out&quot;/&gt;
				&lt;choice xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; doc:name=&quot;Choice&quot;&gt;
					&lt;when expression=&quot;#[payload.isSuccess() == true]&quot;&gt;
						&lt;http:response-builder xmlns:http=&quot;http://www.mulesoft.org/schema/mule/http&quot; doc:name=&quot;HTTP Response Builder&quot; contentType=&quot;application/json&quot; status=&quot;201&quot;&gt;
							&lt;set-payload value=&quot;{ &amp;quot;href&amp;quot; : &amp;quot;/accounts/#[payload.id]&amp;quot;}&quot; doc:name=&quot;Set Payload&quot;/&gt;
						&lt;/http:response-builder&gt;
					&lt;/when&gt;
					&lt;otherwise&gt;
						&lt;scripting:component xmlns:scripting=&quot;http://www.mulesoft.org/schema/mule/scripting&quot; doc:name=&quot;Groovy&quot;&gt;
							&lt;scripting:script engine=&quot;Groovy&quot;&gt;&lt;![CDATA[

							def returnError = &quot;&quot;;
							if(payload.errors != null){
								for(error in payload.errors){
									returnError += &quot;\n&quot;  + error.message;
								}
							}else{
								returnError = &quot;Internal application error&quot;;
							}
							
							return returnError;]]&gt;
							&lt;/scripting:script&gt;
						&lt;/scripting:component&gt;
						&lt;http:response-builder xmlns:http=&quot;http://www.mulesoft.org/schema/mule/http&quot; doc:name=&quot;HTTP Response Builder&quot; contentType=&quot;application/json&quot; status=&quot;500&quot;&gt;
						&lt;/http:response-builder&gt;
					&lt;/otherwise&gt;
				&lt;/choice&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; category=&quot;amg.mkaminsk.accounts.post.request.out&quot; doc:name=&quot;Logger&quot;/&gt;
				&lt;!-- &lt;json:object-to-json-transformer --&gt;
				&lt;!-- doc:name=&quot;Object to JSON&quot; /&gt; --&gt;
			&lt;/rest-router:post&gt;
		&lt;/rest-router:router&gt;</content>
            </unknown>
            <unknown description="false" index="35" entity-id="unknown#2">
                <graphicalData x="0" y="0" width="0" height="0"/>
                <content>&lt;rest-router:router xmlns:rest-router=&quot;http://www.mulesoft.org/schema/mule/rest-router&quot; xmlns:doc=&quot;http://www.mulesoft.org/schema/mule/documentation&quot; templateUri=&quot;/accounts/{accountId}&quot; config-ref=&quot;rest-router-config&quot; doc:name=&quot;Mule Rest Router&quot;&gt;
			&lt;rest-router:get&gt;
				&lt;sfdc:query-single xmlns:sfdc=&quot;http://www.mulesoft.org/schema/mule/sfdc&quot; config-ref=&quot;Salesforce_OAuth&quot; query=&quot;select ${sfdc.account.fields} from Account where Id = '#[flowVars['accountId']]'&quot; doc:name=&quot;Salesforce&quot; accessTokenId=&quot;#[header:INBOUND:Authorization]&quot;/&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.sfdc.out&quot;/&gt;
				&lt;scripting:transformer xmlns:scripting=&quot;http://www.mulesoft.org/schema/mule/scripting&quot; returnClass=&quot;amg.mkaminsk.sfdc.model.Account&quot; mimeType=&quot;application/json&quot; doc:name=&quot;Groovy&quot;&gt;
					&lt;scripting:script engine=&quot;Groovy&quot; file=&quot;mappings/groovy/sfdc-account-to-account.groovy&quot;/&gt;
				&lt;/scripting:transformer&gt;
				&lt;json:object-to-json-transformer xmlns:json=&quot;http://www.mulesoft.org/schema/mule/json&quot; doc:name=&quot;Object to JSON&quot; ignoreBadInput=&quot;true&quot; mimeType=&quot;application/json&quot;/&gt;
			&lt;/rest-router:get&gt;
			&lt;rest-router:put&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.post.request.in&quot;/&gt;
				&lt;json:json-to-object-transformer xmlns:json=&quot;http://www.mulesoft.org/schema/mule/json&quot; returnClass=&quot;amg.mkaminsk.sfdc.model.Account&quot; doc:name=&quot;JSON to Object&quot;/&gt;
				&lt;scripting:component xmlns:scripting=&quot;http://www.mulesoft.org/schema/mule/scripting&quot; doc:name=&quot;Groovy&quot;&gt;
					&lt;scripting:script engine=&quot;Groovy&quot; file=&quot;mappings/groovy/account-to-sfdc-account.groovy&quot;/&gt;
				&lt;/scripting:component&gt;
				&lt;scripting:component xmlns:scripting=&quot;http://www.mulesoft.org/schema/mule/scripting&quot; doc:name=&quot;Groovy&quot;&gt;
					&lt;scripting:script engine=&quot;Groovy&quot;&gt;&lt;![CDATA[
						def account = payload;
						account.id = flowVars.accountId;
						return account;
						]]&gt;
					&lt;/scripting:script&gt;
				&lt;/scripting:component&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.put.sfdc.in&quot;/&gt;
				&lt;sfdc:update-single xmlns:sfdc=&quot;http://www.mulesoft.org/schema/mule/sfdc&quot; config-ref=&quot;Salesforce_OAuth&quot; doc:name=&quot;Salesforce&quot; accessTokenId=&quot;#[header:INBOUND:Authorization]&quot; type=&quot;Account&quot;&gt;
					&lt;sfdc:object ref=&quot;#[payload]&quot;/&gt;
				&lt;/sfdc:update-single&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; doc:name=&quot;Logger&quot; category=&quot;amg.mkaminsk.accounts.post.sfdc.out&quot;/&gt;
				&lt;choice xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; doc:name=&quot;Choice&quot;&gt;
					&lt;when expression=&quot;#[payload.isSuccess() == true]&quot;&gt;
						&lt;http:response-builder xmlns:http=&quot;http://www.mulesoft.org/schema/mule/http&quot; doc:name=&quot;HTTP Response Builder&quot; contentType=&quot;application/json&quot; status=&quot;200&quot;&gt;
							&lt;set-payload value=&quot;{ &amp;quot;href&amp;quot; : &amp;quot;/accounts/#[payload.id]&amp;quot;}&quot; doc:name=&quot;Set Payload&quot;/&gt;
						&lt;/http:response-builder&gt;
					&lt;/when&gt;
					&lt;otherwise&gt;
						&lt;scripting:component xmlns:scripting=&quot;http://www.mulesoft.org/schema/mule/scripting&quot; doc:name=&quot;Groovy&quot;&gt;
							&lt;scripting:script engine=&quot;Groovy&quot;&gt;&lt;![CDATA[

							def returnError = &quot;&quot;;
							if(payload.errors != null){
								for(error in payload.errors){
									returnError += &quot;\n&quot;  + error.message;
								}
							}else{
								returnError = &quot;Internal application error&quot;;
							}
							
							return returnError;]]&gt;
							&lt;/scripting:script&gt;
						&lt;/scripting:component&gt;
						&lt;http:response-builder xmlns:http=&quot;http://www.mulesoft.org/schema/mule/http&quot; doc:name=&quot;HTTP Response Builder&quot; contentType=&quot;application/json&quot; status=&quot;500&quot;&gt;
						&lt;/http:response-builder&gt;
					&lt;/otherwise&gt;
				&lt;/choice&gt;
				&lt;logger xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; message=&quot;#[payload]&quot; level=&quot;INFO&quot; category=&quot;amg.mkaminsk.accounts.post.request.out&quot; doc:name=&quot;Logger&quot;/&gt;
				&lt;!-- &lt;json:object-to-json-transformer --&gt;
				&lt;!-- doc:name=&quot;Object to JSON&quot; /&gt; --&gt;
			&lt;/rest-router:put&gt;
			&lt;rest-router:delete&gt;
				&lt;scripting:component xmlns:scripting=&quot;http://www.mulesoft.org/schema/mule/scripting&quot; doc:name=&quot;Groovy&quot;&gt;
					&lt;scripting:script engine=&quot;Groovy&quot;&gt;&lt;![CDATA[
					
					return java.util.Arrays.asList(flowVars.accountId);
]]&gt;&lt;/scripting:script&gt;
				&lt;/scripting:component&gt;

				&lt;sfdc:delete xmlns:sfdc=&quot;http://www.mulesoft.org/schema/mule/sfdc&quot; config-ref=&quot;Salesforce_OAuth&quot; doc:name=&quot;Salesforce&quot; accessTokenId=&quot;#[header:INBOUND:Authorization]&quot;&gt;
					&lt;sfdc:ids ref=&quot;#[payload]&quot;/&gt;
				&lt;/sfdc:delete&gt;
				&lt;choice xmlns=&quot;http://www.mulesoft.org/schema/mule/core&quot; doc:name=&quot;Choice&quot;&gt;
					&lt;when expression=&quot;#[payload[0].isSuccess() == true]&quot;&gt;
						&lt;http:response-builder xmlns:http=&quot;http://www.mulesoft.org/schema/mule/http&quot; doc:name=&quot;HTTP Response Builder&quot; contentType=&quot;application/json&quot; status=&quot;200&quot;&gt;
							&lt;set-payload value=&quot;''&quot; doc:name=&quot;Set Payload&quot;/&gt;
						&lt;/http:response-builder&gt;
					&lt;/when&gt;
					&lt;otherwise&gt;
						&lt;scripting:component xmlns:scripting=&quot;http://www.mulesoft.org/schema/mule/scripting&quot; doc:name=&quot;Groovy&quot;&gt;
							&lt;scripting:script engine=&quot;Groovy&quot;&gt;&lt;![CDATA[

							def returnError = &quot;&quot;;
							if(payload.errors != null){
								for(error in payload.errors){
									returnError += &quot;\n&quot;  + error.message;
								}
							}else{
								returnError = &quot;Internal application error&quot;;
							}
							
							return returnError;]]&gt;
							&lt;/scripting:script&gt;
						&lt;/scripting:component&gt;
						&lt;http:response-builder xmlns:http=&quot;http://www.mulesoft.org/schema/mule/http&quot; doc:name=&quot;HTTP Response Builder&quot; contentType=&quot;application/json&quot; status=&quot;500&quot;&gt;
						&lt;/http:response-builder&gt;
					&lt;/otherwise&gt;
				&lt;/choice&gt;
			&lt;/rest-router:delete&gt;
		&lt;/rest-router:router&gt;</content>
            </unknown>
            <scope name="Catch Exception Strategy" type="http://www.mulesoft.org/schema/mule/core/catch-exception-strategy" entity-id="Catch Exception Strategy#1">
                <properties>
                    <property name="labelConfigureConditionalExecutionUsingExpression"/>
                    <property name="when"/>
                    <property name="enableNotifications"/>
                    <property name="auxiliary;index" value="75"/>
                </properties>
                <compartment entity-id="compartment#1">
                    <lane hadOnlyOneElement="false" index="0" isChoiceOtherwiseLane="false" entity-id="compartment-lane#2">
                        <pattern name="Exception Thrown" type="http://www.mulesoft.org/schema/mule/core/logger" entity-id="Logger#1">
                            <graphicalData x="0" y="0" width="0" height="0"/>
                            <properties>
<property name="message" value="An exception has been caught #[payload]"/>
<property name="category"/>
<property name="level" value="ERROR"/>
<property name="auxiliary;index" value="76"/>
                            </properties>
                        </pattern>
                        <pattern name="Prepare response for client" type="http://www.mulesoft.org/schema/mule/core/set-payload" entity-id="Set Payload#1">
                            <graphicalData x="0" y="0" width="0" height="0"/>
                            <properties>
<property name="value" value="Error detected #[payload]"/>
<property name="auxiliary;index" value="77"/>
                            </properties>
                        </pattern>
                        <pattern name="Status code = 500" type="http://www.mulesoft.org/schema/mule/http/response-builder" entity-id="HTTP Response Builder#1">
                            <graphicalData x="0" y="0" width="0" height="0"/>
                            <properties>
<property name="cookiesLabel"/>
<property name="status" value="500"/>
<property name="contentType"/>
<property name="auxiliary;index" value="78"/>
                            </properties>
                            <description>Sending a 500 Http Status code as Response</description>
                        </pattern>
                    </lane>
                </compartment>
            </scope>
        </lane>
    </flow>
    <description></description>
</mule-configuration>
